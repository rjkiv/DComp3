#pragma once

// pair<int from_measure, int to_measure>
// "When song reaches 'from_measure', jump to start of 'to_measure'. 'from_measure' is not played."

// size: 0x38
// "Handles jump points for this song in party mode"
class HamPartyJumpData : public Hmx::Object {
    // "Jump points for this song in party mode"
    std::vector<std::pair<int, int> > mJumps; // 0x2C
};

void HamPartyJumpData::Save(BinStream& bs){
    bs << 0;
    SAVE_SUPERCLASS(Hmx::Object)
    bs << mJumps.size();
    for(auto jump : mJumps){
        bs << jump.first << jump.second;
    }
}